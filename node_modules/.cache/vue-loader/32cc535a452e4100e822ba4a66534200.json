{"remainingRequest":"/Users/ericchen/Desktop/parttime/xinxin/surface/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ericchen/Desktop/parttime/xinxin/surface/src/components/other/google-qrcode.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/ericchen/Desktop/parttime/xinxin/surface/src/components/other/google-qrcode.vue","mtime":1575470069924},{"path":"/Users/ericchen/Desktop/parttime/xinxin/surface/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ericchen/Desktop/parttime/xinxin/surface/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/ericchen/Desktop/parttime/xinxin/surface/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ericchen/Desktop/parttime/xinxin/surface/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { ApiList } from '../../api/api';\nexport default {\n    name: \"GoogleQrcode\",\n    data() {\n        return {\n            imgUrl: '',\n            keyCode: '',\n            openFlag: false,\n            user: JSON.parse(sessionStorage.getItem(\"userInfo\")),\n        }\n    },\n    created() {\n        this.getQrcode(0);\n    },\n    methods: {\n        getQrcode(flag) {\n            let api = new ApiList();\n            api.getQRcode(this.user.id, flag).then(data => {\n                console.log(data)\n                if(flag == 0) {\n                    if(data.data.data.qrurl == '' || data.data.data.qrurl == null) {\n                        this.openFlag = true;\n                    }else {\n                        this.imgUrl = data.data.data.qrurl;\n                        this.keyCode = data.data.data.key;\n                        this.openFlag = false;\n                    }\n                } else {\n                    if(data.data.data.message == \"ok\") {\n                        this.$message({\n                            type: 'success',\n                            message: `密钥开启成功！`\n                        });\n                        this.openFlag = true;\n                    } else {\n                        this.$message({\n                            type: 'error',\n                            message: `密钥开启失败，请重试！`\n                        });\n                        this.openFlag = false;\n                    }\n                    \n                }\n                \n            })\n        }\n    }\n}\n",{"version":3,"sources":["google-qrcode.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA","file":"google-qrcode.vue","sourceRoot":"src/components/other","sourcesContent":["<template>\n    <div style=\"padding-top: 50px;\">\n        <div class=\"isopen-info\" v-if=\"openFlag\">您已绑定谷歌验证码!</div>\n        <div class=\"qrcode-wrap\" v-if=\"!openFlag\">\n            <h4>1.请下载APP谷歌身份验证器GoogleAuthenticator后扫描以下二维码。</h4>\n            <img :src=\"imgUrl\" alt=\"\">\n            <p class=\"keycode\">密钥：{{ keyCode }}</p>\n        </div>\n        <div class=\"qrcode-wrap\" v-if=\"!openFlag\">\n            <h4>2.APP扫码绑定后，请备份该二维码以免丢失，然后点击确认开启。</h4>\n            <el-button @click=\"getQrcode(1)\" type=\"primary\">确认开启</el-button>\n        </div>\n        <div class=\"qrcode-wrap danger\" v-if=\"!openFlag\">\n            <h4>3.务必要保存二维码或密钥后再点击“确认开启”按钮。</h4>\n        </div>\n    </div>\n</template>\n\n<script>\nimport { ApiList } from '../../api/api';\nexport default {\n    name: \"GoogleQrcode\",\n    data() {\n        return {\n            imgUrl: '',\n            keyCode: '',\n            openFlag: false,\n            user: JSON.parse(sessionStorage.getItem(\"userInfo\")),\n        }\n    },\n    created() {\n        this.getQrcode(0);\n    },\n    methods: {\n        getQrcode(flag) {\n            let api = new ApiList();\n            api.getQRcode(this.user.id, flag).then(data => {\n                console.log(data)\n                if(flag == 0) {\n                    if(data.data.data.qrurl == '' || data.data.data.qrurl == null) {\n                        this.openFlag = true;\n                    }else {\n                        this.imgUrl = data.data.data.qrurl;\n                        this.keyCode = data.data.data.key;\n                        this.openFlag = false;\n                    }\n                } else {\n                    if(data.data.data.message == \"ok\") {\n                        this.$message({\n                            type: 'success',\n                            message: `密钥开启成功！`\n                        });\n                        this.openFlag = true;\n                    } else {\n                        this.$message({\n                            type: 'error',\n                            message: `密钥开启失败，请重试！`\n                        });\n                        this.openFlag = false;\n                    }\n                    \n                }\n                \n            })\n        }\n    }\n}\n</script>\n\n<style lang=\"less\" scoped>\n    .qrcode-wrap{\n        text-align: left;\n        text-indent: 20px;\n        img{\n            width: 100px;\n            height: 100px;\n            display: block;\n            margin: 10px auto;\n        }\n        .keycode{\n            text-align: center;\n            margin-bottom: 20px;\n        }\n        /deep/ .el-button--primary{\n            display: inline-block;\n            margin: 10px 0 0 100px;\n        }\n    }\n    .danger{\n        color: red;\n        line-height: 48px;\n    }\n    .isopen-info{\n        font-size: 18px;\n    }\n</style>\n"]}]}